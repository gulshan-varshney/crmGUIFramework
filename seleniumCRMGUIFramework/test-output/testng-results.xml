<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-30T05:34:20Z" name="Default suite" finished-at="2024-05-30T05:34:42Z" duration-ms="22412">
    <groups>
    </groups>
    <test started-at="2024-05-30T05:34:20Z" name="Default test" finished-at="2024-05-30T05:34:42Z" duration-ms="22412">
      <class name="practice.Basics.GetproductInfoTest">
        <test-method signature="getProductInfoTest(java.lang.String, java.lang.String)[pri:0, instance:practice.Basics.GetproductInfoTest@12359a82]" started-at="2024-05-30T05:34:20Z" name="getProductInfoTest" data-provider="getdata" finished-at="2024-05-30T05:34:25Z" duration-ms="5118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Apple iPhone 13 (128GB) - Starlight]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductInfoTest -->
        <test-method signature="getProductInfoTest(java.lang.String, java.lang.String)[pri:0, instance:practice.Basics.GetproductInfoTest@12359a82]" started-at="2024-05-30T05:34:25Z" name="getProductInfoTest" data-provider="getdata" finished-at="2024-05-30T05:34:30Z" duration-ms="4605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Apple iPhone 15 (128 GB) - Black]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductInfoTest -->
        <test-method signature="getProductInfoTest(java.lang.String, java.lang.String)[pri:0, instance:practice.Basics.GetproductInfoTest@12359a82]" started-at="2024-05-30T05:34:30Z" name="getProductInfoTest" data-provider="getdata" finished-at="2024-05-30T05:34:34Z" duration-ms="4370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Apple iPhone 13 (128GB) - Pink]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductInfoTest -->
        <test-method signature="getProductInfoTest(java.lang.String, java.lang.String)[pri:0, instance:practice.Basics.GetproductInfoTest@12359a82]" started-at="2024-05-30T05:34:34Z" name="getProductInfoTest" data-provider="getdata" finished-at="2024-05-30T05:34:39Z" duration-ms="4362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Apple iPhone 13 (128GB) - Green]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductInfoTest -->
        <test-method signature="getProductInfoTest(java.lang.String, java.lang.String)[pri:0, instance:practice.Basics.GetproductInfoTest@12359a82]" started-at="2024-05-30T05:34:39Z" name="getProductInfoTest" data-provider="getdata" finished-at="2024-05-30T05:34:42Z" duration-ms="3354" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at practice.Basics.GetproductInfoTest.getProductInfoTest(GetproductInfoTest.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductInfoTest -->
      </class> <!-- practice.Basics.GetproductInfoTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
